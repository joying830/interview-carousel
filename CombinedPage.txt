<!DOCTYPE html>
<html lang="zh-TW">
<head>
  <base target="_top">
  <title><?= mainPageTitle ? mainPageTitle : "數位永續 薪在嘉義-面試進度情形" ?></title>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate" />
  <meta http-equiv="Pragma" content="no-cache" />
  <!-- 字體與 Tailwind -->
  <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+TC:wght@400;500;700&display=swap" rel="stylesheet">
  <script src="https://cdn.tailwindcss.com"></script>
  <script>
    tailwind.config = {
      theme: {
        extend: {
          colors: {
            deepPurple: '#1F1D53', midPurple: '#6B257F', darkPurple: '#4C237C',
            deepBlue: '#053D88', blue: '#01529F', royalBlue: '#2956A8',
            lightPurple: '#A48DCD', nearWhite: '#EDEEF7', circuitCyan: '#28C4FF',
            dateBlockBg: '#7E2AFF', buttonGradStart: '#AC3FFF', buttonGradEnd: '#6A1BCB',
            errorRed: '#ff6b6b', successGreen: '#4ade80',
            inputBg: 'rgba(31, 29, 83, 0.7)',
            inputFocusBg: 'rgba(31, 29, 83, 0.8)',
            white: '#FFFFFF'
          }
        }
      }
    }
  </script>
  <style>
    /* --- General Styles based on reference --- */
    body { 
      font-family: 'Noto Sans TC', sans-serif; 
      background-color: #1F1D53; /* deepPurple from reference */
      color: #FFFFFF; /* Default text color white */
      position: relative; 
      min-height: 100vh; 
      margin: 0;
      padding: 0;
      display: flex;
      flex-direction: column;
      overflow: hidden; /* 主 body 不應滾動，由 slide 內容控制 */
      font-size: 16px; /* 基礎字體大小，方便後續用 rem 或 em 調整 */
    }

    /* --- Background Effects from reference --- */
    .circuit-background { position: fixed; top: 0; left: 0; width: 100%; height: 100%; z-index: 0; pointer-events: none; }
    .circuit-line { position: absolute; background-color: #4C237C; /* darkPurple */ box-shadow: 0 0 5px #01529F; /* blue */ }
    .circuit-dot { position: absolute; width: 6px; height: 6px; border-radius: 50%; background-color: #28C4FF; /* circuitCyan */ box-shadow: 0 0 8px #28C4FF; }
    
    /* 左側漸層效果調整：
       如果您不想要左側淡化效果，可以將下面這段 .left-gradient 的 display 設為 none，
       或直接刪除這段 CSS 並刪除 HTML 中的 <div class="left-gradient"></div>。
    */
    .left-gradient { 
      /* display: none; */  /* 如果要完全隱藏此效果，取消此行註解 */
      position: fixed; top: 0; left: 0; 
      width: 15%; /* 原為 30%，已調整為 15% 以減弱效果 */ 
      height: 100%; 
      background: linear-gradient(90deg, #053D88 0%, rgba(5, 61, 136, 0) 100%); 
      z-index: 1; 
      pointer-events: none; 
    }

    /* --- Styles for CombinedPage structure --- */
    .main-page-header { 
      padding: 20px 20px 15px 20px; 
      text-align: center; 
      position: relative; 
      z-index: 10; 
      flex-shrink: 0; /* 防止標頭在 flex 佈局中被壓縮 */
    }
    .main-page-title { 
      font-size: 2.25rem; /* 放大總標題 (約 Tailwind text-4xl) */
      line-height: 2.75rem; 
      font-weight: 700; 
      text-shadow: 0 4px 8px #6B257F; 
      color: #FFFFFF;
      margin-bottom: 0.5rem; 
    }

    .slideshow-master-container {
      width: 100%;
      flex-grow: 1; 
      position: relative; 
      overflow: hidden; 
      padding: 5px 15px 15px 15px; /* Slide 外圍的 padding */
      box-sizing: border-box;
    }
    .column-group-slide {
      width: 100%;
      height: 100%;
      position: absolute;
      top: 0;
      left: 0;
      display: none; 
      opacity: 0;
      transition: opacity 0.8s ease-in-out; 
      /* padding for slide content is handled by .page-container-in-slide or directly here if needed */
      box-sizing: border-box;
    }
    .column-group-slide.active {
      display: block; 
      opacity: 1;
      /* Ensure the active slide is on top if using absolute positioning for all */
      z-index: 5; 
    }
    
    .page-container-in-slide {
      display: grid;
      /* 平均分 15 欄 */
      grid-template-columns: repeat(15, 1fr);
      /* 欄與欄之間留空隙 */
      gap: 12px;        /* 可自行調整 */
      width: 100%;      /* 滿版使用整個 600cm */
      height: 100%;
      overflow-x: auto; /* 如果內容更寬，就左右捲動 */
    }


    /* 調整 .column 的 margin 由 gap 控制，不再需要 margin-right */
    .column { 
      min-width: 0;     /* 讓 grid 等分寬度生效 */
      background-color: rgba(76, 35, 124, 0.7); 
      border-radius: 16px; 
      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
      backdrop-filter: blur(4px); 
      -webkit-backdrop-filter: blur(4px);
      border: 1px solid rgba(164, 141, 205, 0.18); 
      display: flex; 
      flex-direction: column; 
      overflow: hidden; 
    }

    .column-title { 
      background: linear-gradient(135deg, #2956A8, #4C237C); 
      color: #FFFFFF; 
      font-weight: 700; 
      letter-spacing: 0.5px; 
      text-align: center; 
      padding: 0.85rem 1rem; 
      border-bottom: 2px solid #28C4FF; 
      position: relative; 
      font-size: 1.3rem; /* 放大欄位標題文字 */
      flex-shrink: 0; /* 防止標題被壓縮 */
    }
    .column-title::after { content: ''; position: absolute; top: 0; left: 0; width: 100%; height: 1px; background-color: #28C4FF; box-shadow: 0 0 8px #28C4FF; }
    
    .column-content { 
      background-color: rgba(31, 29, 83, 0.8); 
      overflow-y: auto; 
      overflow-x: hidden; 
      height: 100%; /* 讓內容區填滿欄位剩餘高度 */
      flex-grow: 1; 
      padding: 12px; 
      font-size: 1.1rem; /* 放大內容區基礎文字 */
    }

    .column-content table { border-collapse: separate; border-spacing: 0; width: 100%; }
    .column-content th { 
      background: linear-gradient(135deg, #01529F, #2956A8); /* 調整表頭漸層以區分欄位標題 */
      position: sticky; top: 0; z-index: 10; 
      border-bottom: 2px solid #28C4FF; 
      font-weight: 600; 
      letter-spacing: 0.5px; text-align: center; color: #FFFFFF; 
      padding: 0.8rem 0.8rem; /* 調整 padding */
      font-size: 1.15rem; /* 放大表頭文字 */
    }
    /* Removed th::after as it was conflicting with column-title::after visually when sticky */

    .column-content tr:nth-child(odd) { background-color: rgba(31, 29, 83, 0.9); }
    .column-content tr:nth-child(even) { background-color: rgba(76, 35, 124, 0.7); }
    .column-content tr:hover { background-color: rgba(108, 37, 127, 0.7); }
    
    .column-content td { 
      text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5); 
      color: #EDEEF7; 
      padding: 0.8rem 0.8rem; /* 調整 padding */
      text-align: center; 
      vertical-align: middle; 
      font-size: 1.05rem; /* 表格內容文字 */
      line-height: 1.5; /* 增加行高方便閱讀 */
    }
    .text-successGreen { color: #4ade80; } 
    
    .no-data, .error-message, .static-message-content { 
      text-align: center; color: #EDEEF7; 
      margin-top: 25px; padding: 20px; 
      font-style: italic; 
      font-size: 1.15rem; /* 放大提示訊息文字 */
      line-height: 1.6;
    }
    .static-message-content { font-style: normal; font-weight: normal; }

    /* Custom scrollbar for Webkit browsers */
    ::-webkit-scrollbar {
      width: 10px; /* Width of vertical scrollbar */
      height: 10px; /* Height of horizontal scrollbar */
    }
    ::-webkit-scrollbar-track {
      background: rgba(31, 29, 83, 0.5); /* deepPurple with alpha */
      border-radius: 5px;
    }
    ::-webkit-scrollbar-thumb {
      background: #28C4FF; /* circuitCyan */
      border-radius: 5px;
    }
    ::-webkit-scrollbar-thumb:hover {
      background: #A48DCD; /* lightPurple */
    }

  </style>
</head>
<body>

  <!-- 背景特效、標題 -->
  <div class="circuit-background" id="circuitBackground"></div>
  <div class="left-gradient"></div>

  <div class="main-page-header">
    <? if (mainPageTitle) { ?>
      <h1 class="main-page-title"><?= mainPageTitle ?></h1>
    <? } ?>
  </div>

  <div class="slideshow-master-container"
       id="slideshowMasterContainer"
       role="region"
       aria-roledescription="carousel"
       aria-label="<?= mainPageTitle ?>">
    <? if (slides && slides.length) { ?>
      <? for (var i = 0; i < slides.length; i++) { ?>
        <? var slide = slides[i]; ?>
        <div class="column-group-slide"
             id="slide-group-<?=i?>"
             aria-hidden="<?= i===0 ? 'false' : 'true' ?>">
          <div class="page-container-in-slide">
            <? if (slide.columnsData && slide.columnsData.length > 0) { ?>
              <? for (var j = 0; j < slide.columnsData.length; j++) { ?>
                <? var column = slide.columnsData[j]; ?>
                <div class="column">
                  <div class="column-title"><?= column.title ?></div>
                  <div class="column-content">
                    <? if (column.error) { ?>
                      <p class="error-message"><?= column.error ?></p>
                    <? } else if (column.staticMessage) { ?>
                      <p class="static-message-content"><?= column.staticMessage ?></p>
                    <? } else if (column.data && column.data.length > 0) { ?>
                      <table>
                        <thead>
                          <tr><th>姓　　名</th><th>面試情形</th></tr>
                        </thead>
                        <tbody>
                          <? for (var k = 0; k < column.data.length; k++) { ?>
                            <? var rowData = column.data[k]; ?>
                            <tr>
                              <td><?= rowData.B ?></td>
                              <td class="<?= rowData.C === '已完成面試' ? 'text-successGreen font-semibold' : '' ?>"><?= rowData.C ?></td>
                            </tr>
                          <? } ?>
                        </tbody>
                      </table>
                    <? } else { ?>
                      <p class="no-data">（目前沒有 <?= column.originalSheetName ? "「" + column.originalSheetName + "」的" : "" ?> 資料）</p>
                    <? } ?>
                  </div>
                </div>
              <? } ?>
            <? } else { ?>
                <p class="no-data" style="width:100%; font-size:1.2em; padding-top: 30px;">此輪播頁無欄位資料。</p>
            <? } ?>
          </div>
        </div>
      <? } ?>
    <? } else { ?>
      <div style="width:100%; text-align:center; padding-top: 50px;">
          <p class="no-data" style="font-size:1.3em;">沒有設定輪播資料或輪播群組為空。</p>
      </div>
    <? } ?>
  </div>

<script>
  // 1. 背景特效
  function createCircuitBackground() {
    const circuitBg = document.getElementById('circuitBackground');
    if (!circuitBg) return;
    circuitBg.innerHTML = '';
    // 水平線
    for (let i = 0; i < 15; i++) {
      const line = document.createElement('div');
      line.className = 'circuit-line';
      line.style.height = '2px';
      line.style.width = `${Math.random() * 30 + 10}%`;
      line.style.top = `${Math.random() * 100}%`;
      line.style.left = `${Math.random() * 70}%`;
      if (Math.random() > 0.7) {
        line.style.backgroundColor = '#28C4FF';
        line.style.boxShadow = '0 0 10px #28C4FF';
      }
      circuitBg.appendChild(line);
    }
    // 垂直線
    for (let i = 0; i < 15; i++) {
      const line = document.createElement('div');
      line.className = 'circuit-line';
      line.style.width = '2px';
      line.style.height = `${Math.random() * 30 + 10}%`;
      line.style.top = `${Math.random() * 70}%`;
      line.style.left = `${Math.random() * 100}%`;
      if (Math.random() > 0.7) {
        line.style.backgroundColor = '#28C4FF';
        line.style.boxShadow = '0 0 10px #28C4FF';
      }
      circuitBg.appendChild(line);
    }
    // 點
    for (let i = 0; i < 30; i++) {
      const dot = document.createElement('div');
      dot.className = 'circuit-dot';
      dot.style.top = `${Math.random() * 100}%`;
      dot.style.left = `${Math.random() * 100}%`;
      circuitBg.appendChild(dot);
    }
  }
  function initPageStyles() {
    createCircuitBackground();
  }

  // 2. 自動捲動（動態計算步進）
  const SLIDE_DURATION = 30000; // ms
  const SCROLL_INTERVAL = 50;   // ms
  let _scrollIntervals = [];

  function clearAutoScroll() {
    _scrollIntervals.forEach(id => clearInterval(id));
    _scrollIntervals = [];
  }

  function startAutoScrollOnSlide(slideEl) {
    clearAutoScroll();
    // 找出所有 .column-content 需要捲動的長度
    const contents = Array.from(slideEl.querySelectorAll('.column-content'))
      .filter(c => c.scrollHeight > c.clientHeight);

    if (!contents.length) return;

    // 計算所有欄位中最高的 scroll 長度（px）
    const maxHeights = contents.map(c => c.scrollHeight - c.clientHeight);
    const target = Math.max(...maxHeights);

    // 計算總共要跑幾次 tick
    const ticks = SLIDE_DURATION / SCROLL_INTERVAL;
    // 每次 tick 要走多少 px
    const step = Math.ceil(target / ticks);

    // 對每個欄位都用同樣的 step
    contents.forEach(content => {
      const id = setInterval(() => {
        if (content.scrollTop + content.clientHeight < content.scrollHeight) {
          content.scrollTop = Math.min(
            content.scrollTop + step,
            content.scrollHeight - content.clientHeight
          );
        } else {
          content.scrollTop = 0;
        }
      }, SCROLL_INTERVAL);
      _scrollIntervals.push(id);
    });
  }

  // 3. 輪播邏輯
  document.addEventListener('DOMContentLoaded', () => {
    initPageStyles();
    const slides = document.querySelectorAll('.column-group-slide');
    let idx = 0;

    function showSlide(i) {
      slides.forEach((el, j) => {
        const active = i === j;
        el.classList.toggle('active', active);
        el.setAttribute('aria-hidden', active ? 'false' : 'true');
        if (active) startAutoScrollOnSlide(el);
      });
    }

    showSlide(0);
    if (slides.length > 1) {
      setInterval(() => {
        idx = (idx + 1) % slides.length;
        showSlide(idx);
      }, SLIDE_DURATION);
    }
  });

  // 4. resize 時重畫背景
  window.addEventListener('resize', () => {
    clearTimeout(window.__resizeTimer);
    window.__resizeTimer = setTimeout(createCircuitBackground, 250);
  });

    // 5. 自動重整（放最底下）
    setInterval(() => {
      if (typeof google !== 'undefined'
          && google.script
          && google.script.host
          && typeof google.script.host.reload === 'function') {
        // Apps Script 環境
        google.script.host.reload();
      } else {
        // 一般網頁
        location.reload(true);
      }
    }, 30000);

</script>
</body>
</html>